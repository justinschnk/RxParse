buildscript {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.4.0'
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.github.JakeWharton:sdk-manager-plugin:-SNAPSHOT'
        classpath 'com.novoda:bintray-release:0.4.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        //classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
    }

    // Exclude the version that the android plugin depends on.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'jacoco-android' // not support retrolambda: 0% coverage

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    //maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            testCoverageEnabled true // Instrumentation
        }
    }
}

dependencies {
    compile 'com.parse:parse-android:1.13.1'
    compile 'io.reactivex:rxjava:1.2.4'

    //compile 'com.parse.bolts:bolts-tasks:1.4.0'
    //compile 'com.github.yongjhih.RxBolts:rxbolts-android:-SNAPSHOT'
    //compile 'com.github.yongjhih:RxBolts:-SNAPSHOT'
    compile 'com.infstory:rxbolts-tasks:1.0.3'

    testCompile 'junit:junit:4.12'
    //testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.robolectric:robolectric:3.1.4'
    //testCompile 'org.robolectric:robolectric:3.1-SNAPSHOT'
    testCompile 'org.skyscreamer:jsonassert:1.4.0'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.squareup.okhttp:mockwebserver:2.4.0'
    testCompile 'io.reactivex:rxandroid:0.24.0'
    //testCompile 'com.github.ubiratansoares:rxassertions:0.2.0'
    testCompile 'com.github.yongjhih:rxassertions:0.2.2'
    testCompile 'com.github.yongjhih:mocker:0.1.2'
    //testCompile 'com.github.ubiratansoares:rxassertions:0.2.0'
}

tasks.withType(Test) {
  testLogging {
    exceptionFormat "full"
    //events "passed", "skipped", "failed"
    events "passed", "skipped", "failed", "standardOut", "standardError"
    showStandardStreams = true
  }
}

apply from: 'jacoco-coveralls.gradle'
//apply from: 'jacoco-android-coveralls.gradle'

apply plugin: 'com.novoda.bintray-release'

def getRepositoryUsername() {
    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
}

def getRepositoryPassword() {
    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
}

publish {
    userOrg = 'yongjhih'
    groupId = 'com.infstory'
    artifactId = 'rxparse'
    uploadName = 'RxParse'
    publishVersion = '2.0.3'
    desc = 'Reactive Parse'
    website = 'https://github.com/yongjhih/RxParse'
    bintrayUser = getRepositoryUsername()
    bintrayKey = getRepositoryPassword()
    dryRun = false
}

group = 'com.github.yongjhih'

apply plugin: 'com.github.dcendents.android-maven'

apply from: 'javadoc.gradle'
